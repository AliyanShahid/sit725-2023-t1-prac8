{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Masters Tri Semester 1\\\\Applied Software Engineering SIT725\\\\Solutions\\\\5.2C\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Masters Tri Semester 1\\\\Applied Software Engineering SIT725\\\\Solutions\\\\5.2C\",\"filename\":\"D:\\\\Masters Tri Semester 1\\\\Applied Software Engineering SIT725\\\\Solutions\\\\5.2C\\\\test\\\\test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Masters Tri Semester 1\\\\Applied Software Engineering SIT725\\\\Solutions\\\\5.2C\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.4:development":{"value":{"code":"// Import Chai synchronously\nvar chai = require('chai');\nvar expect = chai.expect;\n\n// Rest of your test code goes here\nvar request = require(\"request\");\ndescribe(\"Add Two Numbers\", function () {\n  var url = \"http://localhost:3000/addTwoNumbers/3/5\";\n  it(\"returns status 200 to check if api works\", function (done) {\n    request(url, function (error, response, body) {\n      console.log(\"Response:\", response && response.statusCode);\n      expect(response.statusCode).to.equal(200);\n      done();\n    });\n  });\n  it(\"returns statusCode key in body to check if api give right result should be 200\", function (done) {\n    request(url, function (error, response, body) {\n      console.log(\"Response body:\", body);\n      body = JSON.parse(body);\n      expect(body.statusCode).to.equal(200);\n      done();\n    });\n  });\n  it(\"returns the result as number\", function (done) {\n    request(url, function (error, response, body) {\n      console.log(\"Response body:\", body);\n      body = JSON.parse(body);\n      expect(body.result).to.be.a('number');\n      done();\n    });\n  });\n  it(\"returns the result equal to 8\", function (done) {\n    request(url, function (error, response, body) {\n      console.log(\"Response body:\", body);\n      body = JSON.parse(body);\n      expect(body.result).to.equal(8);\n      done();\n    });\n  });\n  it(\"returns the result not equal to 15\", function (done) {\n    request(url, function (error, response, body) {\n      console.log(\"Response body:\", body);\n      body = JSON.parse(body);\n      expect(body.result).to.not.equal(15);\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGFpIiwicmVxdWlyZSIsImV4cGVjdCIsInJlcXVlc3QiLCJkZXNjcmliZSIsInVybCIsIml0IiwiZG9uZSIsImVycm9yIiwicmVzcG9uc2UiLCJib2R5IiwiY29uc29sZSIsImxvZyIsInN0YXR1c0NvZGUiLCJ0byIsImVxdWFsIiwiSlNPTiIsInBhcnNlIiwicmVzdWx0IiwiYmUiLCJhIiwibm90Il0sInNvdXJjZVJvb3QiOiJEOlxcTWFzdGVycyBUcmkgU2VtZXN0ZXIgMVxcQXBwbGllZCBTb2Z0d2FyZSBFbmdpbmVlcmluZyBTSVQ3MjVcXFNvbHV0aW9uc1xcNS4yQ1xcdGVzdFxcIiwic291cmNlcyI6WyJ0ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydCBDaGFpIHN5bmNocm9ub3VzbHlcclxudmFyIGNoYWkgPSByZXF1aXJlKCdjaGFpJyk7XHJcbnZhciBleHBlY3QgPSBjaGFpLmV4cGVjdDtcclxuXHJcbi8vIFJlc3Qgb2YgeW91ciB0ZXN0IGNvZGUgZ29lcyBoZXJlXHJcbnZhciByZXF1ZXN0ID0gcmVxdWlyZShcInJlcXVlc3RcIik7XHJcblxyXG5kZXNjcmliZShcIkFkZCBUd28gTnVtYmVyc1wiLCBmdW5jdGlvbigpIHtcclxuICAgIHZhciB1cmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hZGRUd29OdW1iZXJzLzMvNVwiO1xyXG4gICAgaXQoXCJyZXR1cm5zIHN0YXR1cyAyMDAgdG8gY2hlY2sgaWYgYXBpIHdvcmtzXCIsIGZ1bmN0aW9uKGRvbmUpIHtcclxuICAgICAgICByZXF1ZXN0KHVybCwgZnVuY3Rpb24oZXJyb3IsIHJlc3BvbnNlLCBib2R5KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVzcG9uc2U6XCIsIHJlc3BvbnNlICYmIHJlc3BvbnNlLnN0YXR1c0NvZGUpO1xyXG4gICAgICAgICAgICBleHBlY3QocmVzcG9uc2Uuc3RhdHVzQ29kZSkudG8uZXF1YWwoMjAwKTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBpdChcInJldHVybnMgc3RhdHVzQ29kZSBrZXkgaW4gYm9keSB0byBjaGVjayBpZiBhcGkgZ2l2ZSByaWdodCByZXN1bHQgc2hvdWxkIGJlIDIwMFwiLCBmdW5jdGlvbihkb25lKSB7XHJcbiAgICAgICAgcmVxdWVzdCh1cmwsIGZ1bmN0aW9uKGVycm9yLCByZXNwb25zZSwgYm9keSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlc3BvbnNlIGJvZHk6XCIsIGJvZHkpO1xyXG4gICAgICAgICAgICBib2R5ID0gSlNPTi5wYXJzZShib2R5KTtcclxuICAgICAgICAgICAgZXhwZWN0KGJvZHkuc3RhdHVzQ29kZSkudG8uZXF1YWwoMjAwKTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBpdChcInJldHVybnMgdGhlIHJlc3VsdCBhcyBudW1iZXJcIiwgZnVuY3Rpb24oZG9uZSkge1xyXG4gICAgICAgIHJlcXVlc3QodXJsLCBmdW5jdGlvbihlcnJvciwgcmVzcG9uc2UsIGJvZHkpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZXNwb25zZSBib2R5OlwiLCBib2R5KTtcclxuICAgICAgICAgICAgYm9keSA9IEpTT04ucGFyc2UoYm9keSk7XHJcbiAgICAgICAgICAgIGV4cGVjdChib2R5LnJlc3VsdCkudG8uYmUuYSgnbnVtYmVyJyk7XHJcbiAgICAgICAgICAgIGRvbmUoKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgaXQoXCJyZXR1cm5zIHRoZSByZXN1bHQgZXF1YWwgdG8gOFwiLCBmdW5jdGlvbihkb25lKSB7XHJcbiAgICAgICAgcmVxdWVzdCh1cmwsIGZ1bmN0aW9uKGVycm9yLCByZXNwb25zZSwgYm9keSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlc3BvbnNlIGJvZHk6XCIsIGJvZHkpO1xyXG4gICAgICAgICAgICBib2R5ID0gSlNPTi5wYXJzZShib2R5KTtcclxuICAgICAgICAgICAgZXhwZWN0KGJvZHkucmVzdWx0KS50by5lcXVhbCg4KTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBpdChcInJldHVybnMgdGhlIHJlc3VsdCBub3QgZXF1YWwgdG8gMTVcIiwgZnVuY3Rpb24oZG9uZSkge1xyXG4gICAgICAgIHJlcXVlc3QodXJsLCBmdW5jdGlvbihlcnJvciwgcmVzcG9uc2UsIGJvZHkpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZXNwb25zZSBib2R5OlwiLCBib2R5KTtcclxuICAgICAgICAgICAgYm9keSA9IEpTT04ucGFyc2UoYm9keSk7XHJcbiAgICAgICAgICAgIGV4cGVjdChib2R5LnJlc3VsdCkudG8ubm90LmVxdWFsKDE1KTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzFCLElBQUlDLE1BQU0sR0FBR0YsSUFBSSxDQUFDRSxNQUFNOztBQUV4QjtBQUNBLElBQUlDLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUVoQ0csUUFBUSxDQUFDLGlCQUFpQixFQUFFLFlBQVc7RUFDbkMsSUFBSUMsR0FBRyxHQUFHLHlDQUF5QztFQUNuREMsRUFBRSxDQUFDLDBDQUEwQyxFQUFFLFVBQVNDLElBQUksRUFBRTtJQUMxREosT0FBTyxDQUFDRSxHQUFHLEVBQUUsVUFBU0csS0FBSyxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRTtNQUN6Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsV0FBVyxFQUFFSCxRQUFRLElBQUlBLFFBQVEsQ0FBQ0ksVUFBVSxDQUFDO01BQ3pEWCxNQUFNLENBQUNPLFFBQVEsQ0FBQ0ksVUFBVSxDQUFDLENBQUNDLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDLEdBQUcsQ0FBQztNQUN6Q1IsSUFBSSxDQUFDLENBQUM7SUFDVixDQUFDLENBQUM7RUFDTixDQUFDLENBQUM7RUFDRkQsRUFBRSxDQUFDLGdGQUFnRixFQUFFLFVBQVNDLElBQUksRUFBRTtJQUNoR0osT0FBTyxDQUFDRSxHQUFHLEVBQUUsVUFBU0csS0FBSyxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRTtNQUN6Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUVGLElBQUksQ0FBQztNQUNuQ0EsSUFBSSxHQUFHTSxJQUFJLENBQUNDLEtBQUssQ0FBQ1AsSUFBSSxDQUFDO01BQ3ZCUixNQUFNLENBQUNRLElBQUksQ0FBQ0csVUFBVSxDQUFDLENBQUNDLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDLEdBQUcsQ0FBQztNQUNyQ1IsSUFBSSxDQUFDLENBQUM7SUFDVixDQUFDLENBQUM7RUFDTixDQUFDLENBQUM7RUFDRkQsRUFBRSxDQUFDLDhCQUE4QixFQUFFLFVBQVNDLElBQUksRUFBRTtJQUM5Q0osT0FBTyxDQUFDRSxHQUFHLEVBQUUsVUFBU0csS0FBSyxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRTtNQUN6Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUVGLElBQUksQ0FBQztNQUNuQ0EsSUFBSSxHQUFHTSxJQUFJLENBQUNDLEtBQUssQ0FBQ1AsSUFBSSxDQUFDO01BQ3ZCUixNQUFNLENBQUNRLElBQUksQ0FBQ1EsTUFBTSxDQUFDLENBQUNKLEVBQUUsQ0FBQ0ssRUFBRSxDQUFDQyxDQUFDLENBQUMsUUFBUSxDQUFDO01BQ3JDYixJQUFJLENBQUMsQ0FBQztJQUNWLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUNGRCxFQUFFLENBQUMsK0JBQStCLEVBQUUsVUFBU0MsSUFBSSxFQUFFO0lBQy9DSixPQUFPLENBQUNFLEdBQUcsRUFBRSxVQUFTRyxLQUFLLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFO01BQ3pDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRUYsSUFBSSxDQUFDO01BQ25DQSxJQUFJLEdBQUdNLElBQUksQ0FBQ0MsS0FBSyxDQUFDUCxJQUFJLENBQUM7TUFDdkJSLE1BQU0sQ0FBQ1EsSUFBSSxDQUFDUSxNQUFNLENBQUMsQ0FBQ0osRUFBRSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDO01BQy9CUixJQUFJLENBQUMsQ0FBQztJQUNWLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUNGRCxFQUFFLENBQUMsb0NBQW9DLEVBQUUsVUFBU0MsSUFBSSxFQUFFO0lBQ3BESixPQUFPLENBQUNFLEdBQUcsRUFBRSxVQUFTRyxLQUFLLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFO01BQ3pDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRUYsSUFBSSxDQUFDO01BQ25DQSxJQUFJLEdBQUdNLElBQUksQ0FBQ0MsS0FBSyxDQUFDUCxJQUFJLENBQUM7TUFDdkJSLE1BQU0sQ0FBQ1EsSUFBSSxDQUFDUSxNQUFNLENBQUMsQ0FBQ0osRUFBRSxDQUFDTyxHQUFHLENBQUNOLEtBQUssQ0FBQyxFQUFFLENBQUM7TUFDcENSLElBQUksQ0FBQyxDQUFDO0lBQ1YsQ0FBQyxDQUFDO0VBQ04sQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["chai","require","expect","request","describe","url","it","done","error","response","body","console","log","statusCode","to","equal","JSON","parse","result","be","a","not"],"sourceRoot":"D:\\Masters Tri Semester 1\\Applied Software Engineering SIT725\\Solutions\\5.2C\\test\\","sources":["test.js"],"sourcesContent":["// Import Chai synchronously\r\nvar chai = require('chai');\r\nvar expect = chai.expect;\r\n\r\n// Rest of your test code goes here\r\nvar request = require(\"request\");\r\n\r\ndescribe(\"Add Two Numbers\", function() {\r\n    var url = \"http://localhost:3000/addTwoNumbers/3/5\";\r\n    it(\"returns status 200 to check if api works\", function(done) {\r\n        request(url, function(error, response, body) {\r\n            console.log(\"Response:\", response && response.statusCode);\r\n            expect(response.statusCode).to.equal(200);\r\n            done();\r\n        });\r\n    });\r\n    it(\"returns statusCode key in body to check if api give right result should be 200\", function(done) {\r\n        request(url, function(error, response, body) {\r\n            console.log(\"Response body:\", body);\r\n            body = JSON.parse(body);\r\n            expect(body.statusCode).to.equal(200);\r\n            done();\r\n        });\r\n    });\r\n    it(\"returns the result as number\", function(done) {\r\n        request(url, function(error, response, body) {\r\n            console.log(\"Response body:\", body);\r\n            body = JSON.parse(body);\r\n            expect(body.result).to.be.a('number');\r\n            done();\r\n        });\r\n    });\r\n    it(\"returns the result equal to 8\", function(done) {\r\n        request(url, function(error, response, body) {\r\n            console.log(\"Response body:\", body);\r\n            body = JSON.parse(body);\r\n            expect(body.result).to.equal(8);\r\n            done();\r\n        });\r\n    });\r\n    it(\"returns the result not equal to 15\", function(done) {\r\n        request(url, function(error, response, body) {\r\n            console.log(\"Response body:\", body);\r\n            body = JSON.parse(body);\r\n            expect(body.result).to.not.equal(15);\r\n            done();\r\n        });\r\n    });\r\n});\r\n"],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,MAAM,GAAGF,IAAI,CAACE,MAAM;;AAExB;AACA,IAAIC,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAEhCG,QAAQ,CAAC,iBAAiB,EAAE,YAAW;EACnC,IAAIC,GAAG,GAAG,yCAAyC;EACnDC,EAAE,CAAC,0CAA0C,EAAE,UAASC,IAAI,EAAE;IAC1DJ,OAAO,CAACE,GAAG,EAAE,UAASG,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,IAAIA,QAAQ,CAACI,UAAU,CAAC;MACzDX,MAAM,CAACO,QAAQ,CAACI,UAAU,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;MACzCR,IAAI,CAAC,CAAC;IACV,CAAC,CAAC;EACN,CAAC,CAAC;EACFD,EAAE,CAAC,gFAAgF,EAAE,UAASC,IAAI,EAAE;IAChGJ,OAAO,CAACE,GAAG,EAAE,UAASG,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCA,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC;MACvBR,MAAM,CAACQ,IAAI,CAACG,UAAU,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;MACrCR,IAAI,CAAC,CAAC;IACV,CAAC,CAAC;EACN,CAAC,CAAC;EACFD,EAAE,CAAC,8BAA8B,EAAE,UAASC,IAAI,EAAE;IAC9CJ,OAAO,CAACE,GAAG,EAAE,UAASG,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCA,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC;MACvBR,MAAM,CAACQ,IAAI,CAACQ,MAAM,CAAC,CAACJ,EAAE,CAACK,EAAE,CAACC,CAAC,CAAC,QAAQ,CAAC;MACrCb,IAAI,CAAC,CAAC;IACV,CAAC,CAAC;EACN,CAAC,CAAC;EACFD,EAAE,CAAC,+BAA+B,EAAE,UAASC,IAAI,EAAE;IAC/CJ,OAAO,CAACE,GAAG,EAAE,UAASG,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCA,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC;MACvBR,MAAM,CAACQ,IAAI,CAACQ,MAAM,CAAC,CAACJ,EAAE,CAACC,KAAK,CAAC,CAAC,CAAC;MAC/BR,IAAI,CAAC,CAAC;IACV,CAAC,CAAC;EACN,CAAC,CAAC;EACFD,EAAE,CAAC,oCAAoC,EAAE,UAASC,IAAI,EAAE;IACpDJ,OAAO,CAACE,GAAG,EAAE,UAASG,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCA,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC;MACvBR,MAAM,CAACQ,IAAI,CAACQ,MAAM,CAAC,CAACJ,EAAE,CAACO,GAAG,CAACN,KAAK,CAAC,EAAE,CAAC;MACpCR,IAAI,CAAC,CAAC;IACV,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1713836307620}}